{"ast":null,"code":"import _classCallCheck from \"/Users/macbook/Desktop/web build/React App/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbook/Desktop/web build/React App/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbook/Desktop/web build/React App/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbook/Desktop/web build/React App/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbook/Desktop/web build/React App/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbook/Desktop/web build/React App/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ToDos from './components/ToDos';\nimport ApiCall from './components/ApiCall';\n\nvar MyComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyComponent, _React$Component);\n\n  function MyComponent(props) {\n    _classCallCheck(this, MyComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyComponent).call(this, props));\n  }\n\n  _createClass(MyComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"quote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(ToDos, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(ApiCall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MyComponent;\n}(React.Component);\n\n;\nexport default MyComponent; // My code seems v close, but I'm making a mistake in the fetch api call and it's returning undefined.\n// It would appear that the fetch api method doesn't work exactly the same in React JS compared\n// to vanilla OG classic JS","map":{"version":3,"sources":["/Users/macbook/Desktop/web build/React App/my-app/src/App.js"],"names":["React","Component","ToDos","ApiCall","MyComponent","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;IAGMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oFACXA,KADW;AAElB;;;;6BAEQ;AAEP,aACE;AAAK,QAAA,KAAK,EAAG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAEG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,CADF;AAMD;;;;EAbuBL,KAAK,CAACC,S;;AAc/B;AAED,eAAeG,WAAf,C,CAEA;AAEA;AACA","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport ToDos from './components/ToDos';\nimport ApiCall from './components/ApiCall';\n\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    return (\n      <div class = \"quote\">\n         <ToDos />\n         <ApiCall />\n      </div>\n    );\n  }\n};\n\nexport default MyComponent;\n\n// My code seems v close, but I'm making a mistake in the fetch api call and it's returning undefined.\n\n// It would appear that the fetch api method doesn't work exactly the same in React JS compared\n// to vanilla OG classic JS\n"]},"metadata":{},"sourceType":"module"}