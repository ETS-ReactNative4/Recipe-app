{"ast":null,"code":"import _classCallCheck from \"/Users/macbook/Desktop/web build/React App/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbook/Desktop/web build/React App/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbook/Desktop/web build/React App/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbook/Desktop/web build/React App/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbook/Desktop/web build/React App/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbook/Desktop/web build/React App/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar MyComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyComponent, _React$Component);\n\n  function MyComponent(props) {\n    var _this;\n\n    _classCallCheck(this, MyComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyComponent).call(this, props));\n    _this.state = {\n      myApiData: []\n    };\n    return _this;\n  }\n\n  _createClass(MyComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://ron-swanson-quotes.herokuapp.com/v2/quotes', {\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        _this2.setState({\n          myApiData: responseData\n        }, function () {\n          return console.log(responseData);\n        }); // this is now calling the API and console logging effectively\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var myApiData = this.state.myApiData;\n      return React.createElement(\"div\", {\n        class: \"quote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, myApiData + \" - Ron Swanson\"));\n    }\n  }]);\n\n  return MyComponent;\n}(React.Component);\n\n;\nexport default MyComponent;\n\nvar quoteButton =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(quoteButton, _React$Component2);\n\n  function quoteButton() {\n    _classCallCheck(this, quoteButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(quoteButton).apply(this, arguments));\n  }\n\n  return quoteButton;\n}(React.Component()); // My code seems v close, but I'm making a mistake in the fetch api call and it's returning undefined.\n// It would appear that the fetch api method doesn't work exactly the same in React JS compared\n// to vanilla OG classic JS","map":{"version":3,"sources":["/Users/macbook/Desktop/web build/React App/my-app/src/App.js"],"names":["React","Component","MyComponent","props","state","myApiData","fetch","method","then","response","json","responseData","setState","console","log","quoteButton"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;;IAIMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,mDAAD,EAAsD;AACzDC,QAAAA,MAAM,EAAE;AADiD,OAAtD,CAAL,CAGCC,IAHD,CAGM,UAACC,QAAD,EAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OALD,EAOCF,IAPD,CAOM,UAACG,YAAD,EAAkB;AACtB,QAAA,MAAI,CAACC,QAAL,CAAc;AAACP,UAAAA,SAAS,EAAEM;AAAZ,SAAd,EAAyC;AAAA,iBACzCE,OAAO,CAACC,GAAR,CAAYH,YAAZ,CADyC;AAAA,SAAzC,EADsB,CAEM;;AAC/B,OAVC;AAYD;;;6BAEQ;AAAA,UACAN,SADA,GACa,KAAKD,KADlB,CACAC,SADA;AAEP,aACE;AAAK,QAAA,KAAK,EAAG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIA,SAAS,GAAG,gBADhB,CADH,CADF;AAOD;;;;EAhCuBL,KAAK,CAACC,S;;AAiC/B;AAED,eAAeC,WAAf;;IAEMa,W;;;;;;;;;;;;EAAoBf,KAAK,CAACC,SAAN,E,GAI1B;AAEA;AACA","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\n\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myApiData: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://ron-swanson-quotes.herokuapp.com/v2/quotes', {\n      method: 'GET'\n    })\n    .then((response) => {\n      return response.json()\n    })\n\n    .then((responseData) => {\n      this.setState({myApiData: responseData}, () =>\n      console.log(responseData)); // this is now calling the API and console logging effectively\n  })\n\n  }\n\n  render() {\n    const {myApiData} = this.state;\n    return (\n      <div class = \"quote\">\n         <h2>\n            {myApiData + \" - Ron Swanson\"}\n         </h2>\n      </div>\n    );\n  }\n};\n\nexport default MyComponent;\n\nclass quoteButton extends React.Component () {\n  \n}\n\n// My code seems v close, but I'm making a mistake in the fetch api call and it's returning undefined.\n\n// It would appear that the fetch api method doesn't work exactly the same in React JS compared\n// to vanilla OG classic JS\n"]},"metadata":{},"sourceType":"module"}